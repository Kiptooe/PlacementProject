# Generated by Django 4.2.5 on 2023-11-21 08:00

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Email', models.EmailField(max_length=254)),
                ('Phone', models.PositiveIntegerField()),
                ('KCSE_Index', models.PositiveIntegerField()),
                ('Year', models.PositiveIntegerField()),
                ('Gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=15)),
                ('Citizenship', models.CharField(choices=[('C', 'Citizen'), ('NC', 'Not Citizen')], max_length=15)),
                ('Birth_Certificate_No', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Cluster_Name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ClusterSubjectCategory',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Cluster_Subject_Category_Name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Course_Name', models.CharField(max_length=200)),
                ('Course_Code', models.PositiveIntegerField()),
                ('Year_1_Course_Cost', models.PositiveIntegerField()),
                ('Capacity', models.PositiveIntegerField()),
                ('Cluster_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.cluster')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Grade_Name', models.CharField(max_length=200)),
                ('Grade_Value', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='HighSchool',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionType',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Type_Name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Ministry',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Ministry_Name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MinSubjectCategory',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Minimum_Subject_Category_Name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Cluster_Subject_Name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_applicant', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(related_name='placeholder_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='placeholder_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubjectResults',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Applicant_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.applicant')),
                ('Grade_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.grade')),
                ('Subject_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectMinCategory',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Category_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.minsubjectcategory')),
                ('Course_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.course')),
                ('Grade_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.grade')),
                ('Subject_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectCategory',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Category_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.clustersubjectcategory')),
                ('Cluster_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.cluster')),
                ('Subject_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Payment_Code', models.CharField(max_length=100)),
                ('Applicant_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='MainResults',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Average', models.IntegerField()),
                ('Applicant_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.applicant')),
                ('Grade_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.grade')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Institution_Name', models.TextField(max_length=200)),
                ('Ministry_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.ministry')),
                ('Type_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.institutiontype')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='Institution_Id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.institution'),
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Applicant_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.applicant')),
                ('Course_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.course')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Course_Rank', models.CharField(choices=[(1, '1(a)'), (2, '1(b)'), (3, '1(c)'), (4, '2'), (5, '3'), (6, '4')], max_length=1)),
                ('Applicant_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.applicant')),
                ('Course_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.course')),
                ('Payment_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.payment')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='HighSchool_Id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.highschool'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='User_Id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicant.user'),
        ),
    ]
